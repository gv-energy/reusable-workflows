name: CI/CD

on:
  workflow_call:
    inputs:
      COMPONENT:
        required: true
        type: string
    secrets:
      SERVICE_NAME:
        required: true
      PRIVATE_NUGET_USERNAME:
        required: true
      PRIVATE_NUGET_PAT:
        required: true
      ACR_SERVER:
        required: true
      ACR_USERNAME:
        required: true
      ACR_PASSWORD:
        required: true

jobs:
  testing:
    runs-on: ubuntu-latest
    env:
      PRIVATE_NUGET_USERNAME: ${{ secrets.PRIVATE_NUGET_USERNAME }}
      PRIVATE_NUGET_PAT: ${{ secrets.PRIVATE_NUGET_PAT }}
    defaults:
      run:
        working-directory: ./src
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET 6.x
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.x'
      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: Run unit tests
        run: dotnet test
  publish:
    runs-on: ubuntu-latest
    env:
      COMPONENT: Worker
    defaults:
      run:
        working-directory: ./src
    steps:
      - uses: actions/checkout@v3
      - name: Login to ACR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: set project name
        id: project-name
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ secrets.SERVICE_NAME }}.${{ inputs.COMPONENT }}
      - name: Set image tag
        run: echo TAG="$(echo ${GITHUB_HEAD_REF##*/,,} | sed -r 's/[/]+/_/g')"-"${GITHUB_SHA::7}" >> $GITHUB_ENV
        if: github.event_name == 'pull_request'
      - name: Set image tag
        run: echo TAG="$(echo ${GITHUB_REF,,} | sed -e 's#refs/heads/##g')"-"${GITHUB_SHA::7}" >> $GITHUB_ENV
        if: github.event_name != 'pull_request'
      - name: Echo image tag
        run: echo ${{ env.TAG }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Find folder
        run: ls
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./src
          push: true
          tags: ${{ secrets.ACR_SERVER }}/${{ steps.project-name.outputs.lowercase }}:${{ env.TAG }}
          build-args: |
            COMPONENT=${{ inputs.COMPONENT }}
            SERVICE_NAME=${{ secrets.SERVICE_NAME }}
            PRIVATE_NUGET_USERNAME=${{ secrets.PRIVATE_NUGET_USERNAME }}
            PRIVATE_NUGET_PAT=${{ secrets.PRIVATE_NUGET_PAT }}
