name: Test web

on:
  workflow_call:
    inputs:
      USE_DOTNET_7:
        required: false
        default: false
        type: boolean
    secrets:
      PRIVATE_NUGET_USERNAME:
        required: true
      PRIVATE_NUGET_PAT:
        required: true

jobs:
  testing-backend:
    runs-on: ubuntu-latest
    env:
      PRIVATE_NUGET_USERNAME: ${{ secrets.PRIVATE_NUGET_USERNAME }}
      PRIVATE_NUGET_PAT: ${{ secrets.PRIVATE_NUGET_PAT }}
      USE_DOTNET_7: ${{ inputs.USE_DOTNET_7 }}
    defaults:
      run:
        working-directory: ./src
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Setup .NET 6.x
        if: ${{ env.USE_DOTNET_7 == 'false'  }}
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '6.x'
      - name: Setup .NET 7.x
        if: ${{ env.USE_DOTNET_7 == 'true' }}
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '7.x'
      - name: Setup .NET 8.x
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '8.x'
      - uses: actions/cache@v4.1.2
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: Run unit tests
        run: dotnet test

  testing-frontend:
    runs-on: ubuntu-latest
    env:
      PRIVATE_NUGET_USERNAME: ${{ secrets.PRIVATE_NUGET_USERNAME }}
      PRIVATE_NUGET_PAT: ${{ secrets.PRIVATE_NUGET_PAT }}
      FRONTEND_FOLDER: ./src/${{ secrets.SERVICE_NAME }}.Web/ClientApp
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_FOLDER }}
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Echo frontend folder
        run: echo ${{ env.FRONTEND_FOLDER }}
      - name: ls frontend folder
        run: ls
      - name: Use Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: ${{ env.FRONTEND_FOLDER }}/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run frontend unit tests
        run: npm run test:ci
